<?xml version="1.0"?>
<completion_list>
	<!--
		NOTE: A space is needed between tags for the XML Parser to recognise
		it is not empty. Content other than " " will be added as a tab stop.
	-->
	<and> </and>
	<ant antfile="" target=""> </ant>
	<antcall target="doSomethingElse"> </antcall>
	<antlib> </antlib>
	<antlr target="etc/java.g" outputdirectory="build/src"/>
	<antstructure output="project.dtd"/>
	<apply executable="ls"/>
	<apt srcdir="src" destdir="build" classpath="xyz.jar" debug="on" compile="true" factory="org.domain.AnnotationProcessorFactory" factorypathref="my.factorypath.id" preprocessdir="preprocess.dir"> </apt>
	<arg value="example"/>
	<attrib file="dist/run.bat" readonly="true" hidden="true"/>
	<available classname="org.domain.MyClass" property="MyClass.present"/>
	<basename property="jar.filename" file="lib.jarfile"/>
	<buildnumber file="build.number"/>
	<bunzip2 src="test.tar.bz2"/>
	<bzip2 src="test.tar" destfile="test.tar.bz2"/>
	<cab cabfile="dist/manual.cab" basedir="htdocs/manual"/>
	<checksum file="foo.bar"/>
	<chgrp file="dist/start.sh" group="coders"/>
	<chmod file="file" perm="755"/>
	<chown file="dist/start.sh" owner="coderjoe"/>
	<classfileset> </classfileset>
	<classpath path="the.path" refid="id"> </classpath>
	<concat destfile="README.txt">Hello, World!</concat>
	<condition property="javamail.complete"> </condition>
	<copy file="file.path" tofile="file.path"/>
	<copydir src="src/resources" dest="dist"/>
	<copyfile src="src/resources" dest="dist"/>
	<cvs cvsRoot=":pserver:anoncvs@cvs.apache.org:/home/cvspublic" package="ant" dest="ws.dir"/>
	<cvschangelog dir="dev/network" destfile="changelog.xml"/>
	<cvspass cvsroot=":pserver:anoncvs@cvs.apache.org:/home/cvspublic" password="anoncvs"/>
	<cvstagdiff destfile="tagdiff.xml" package="ant" startDate="2002-01-01" endDate="4:2002-31-01"/>
	<cvsversion cvsRoot=":pserver:anoncvs@cvs.apache.org:/home/cvspublic" passfile="/home/myself/.cvspass" serverversionproperty="apachecvsversion" clientversionproperty="localcvsversion"/>
	<defaultexcludes remove="**/.svn"/>
	<delete file=""/>
	<deltree dir="dist"/>
	<depend srcdir="src/main" destdir="build/classes" cache="depcache" closure="yes"/>
	<dependset> </dependset>
	<description> </description>
	<diagnostics/>
	<dirname property="antfile.dir" file="ant.file"/>
	<dirset dir="build"> </dirset>
	<ear destfile="build/myapp.ear" appxml="src/metadata/application.xml"> </ear>
	<echo> </echo>
	<echoproperties destfile="my.properties"/>
	<echoxml file="subbuild.xml"> </echoxml>
	<entry key="key" value="value"/>
	<exclude name="**/ant.jar"/>
	<exec command="$2" dir="$4" os="$6" output="$8"> </exec>
	<extension extensionName="MyExtensions"/>
	<fail unless="thisdoesnotexist">Fail Message</fail>
	<filelist dir="doc.src" files="foo.xml,bar.xml"/>
	<fileset dir="my/src/dir"> </fileset>
	<fileset dir="server.src"> </fileset>
	<filter token="year" value="2000"/>
	<filterchain> </filterchain>
	<filterreader classname="org.apache.tools.ant.filters.EscapeUnicode"/>
	<filterset> </filterset>
	<fixcrlf srcdir="src" includes="**/*.sh" eol="lf" eof="remove"/>
	<ftp server="ftp.apache.org" userid="anonymous" password="me@domain.org"> </ftp>
	<genkey alias="apache-group" storepass="secret"> </genkey>
	<get src="http://ant.apache.org/" dest="help/index.html"/>
	<grant class="java.security.AllPermission"/>
	<gunzip src="test.tar.gz"/>
	<gzip src="test.tar" destfile="test.tar.gz"/>
	<image srcdir="src" destdir="dest" includes="*.png"/>
	<import file="path/to/imported.xml"/>
	<include name="**/*.jar"/>
	<input>Press Return key to continue...</input>
	<isfalse value="some.property"/>
	<istrue value="some.property"/>
	<jar destfile="dist/lib/app.jar" basedir="build/classes"/>
	<jarlib-available property="myext.present" file="myfile.jar"> </jarlib-available>
	<jarlib-display file="myfile.jar"> </jarlib-display>
	<jarlib-manifest destfile="myManifest.txt"> </jarlib-manifest>
	<jarlib-resolve property="dve.library"> </jarlib-resolve>
	<java jar="jar" fork="true" failonerror="true"> </java>
	<javac srcdir="src" destdir="build" classpath="xyz.jar" debug="on" source="1.4"/>
	<javacc target="src/Parser.jj" outputdirectory="build/src" javacchome="/Applications/JavaCC" static="true"/>
	<javadoc destdir="docs/api" author="true" version="true" use="true" windowtitle="Window Title"> </javadoc>
	<javah destdir="c" class="org.foo.Bar"/>
	<jdepend classpathref="base.path"> </jdepend>
	<jjdoc target="src/Parser.jj" outputfile="doc/ParserBNF.html" javacchome="/Applications/JavaCC"/>
	<jjtree target="src/Parser.jjt" outputdirectory="build/src" javacchome="/Applications/JavaCC" nodeusesparser="true"/>
	<jlink compress="false" outfile="out.jar"> </jlink>
	<jspc srcdir="/dev/asf/ant-core/src/war" destdir="/dev/asf/ant-core/gensrc" package="org.domain.jsp" compiler="jasper41" verbose="9"> </jspc>
	<junit> </junit>
	<junitreport todir="./reports"> </junitreport>
	<jvmarg value=""/>
	<length string="foo" property="length.foo"/>
	<loadfile property="message" srcFile="message.txt"/>
	<loadproperties srcFile="file.properties"/>
	<loadresource property="homepage"> </loadresource>
	<macrodef name="testing"> </macrodef>
	<mail from="me" tolist="you" subject="Results of nightly build" files="build.log"/>
	<makeurl file="user.home/m2/repository" property="m2.repository.url"/>
	<manifest file="MANIFEST.MF"/>
	<manifestclasspath property="jar.classpath" jarfile="build/acme.jar"> </manifestclasspath>
	<mapper type="glob" from="*" to="*.bak"/>
	<mapper type="identity"/>
	<mimemail messageMimeType="text/html" messageFile="test.html" tolist="you" subject="Email Subject" from="me"/>
	<mkdir dir="directory"/>
	<move file="src/dir" tofile="new/dir/to/move/to"/>
	<move todir="some/new/dir" includeemptydirs="false"> </move>
	<native2ascii dest="srcdir"/>
	<netrexxc srcDir="/source/project" destDir="/source/project/build"/>
	<nice newpriority="10"/>
	<not> </not>
	<parallel> </parallel>
	<patch patchfile="module.1.0-1.1.patch"/>
	<pathconvert targetos="unix" property="wl.path.unix" refid="wl.path"> </pathconvert>
	<pathelement location="" path=""> </pathelement>
	<patternset> </patternset>
	<permissions> </permissions>
	<presetdef name="my.javac"> </presetdef>
	<project name="" default="" basedir=""> </project>
	<property name="" value=""> </property>
	<propertyfile file="my.properties" comment="My properties"> </propertyfile>
	<propertyset> </propertyset>
	<pvcs repository="/mnt/pvcs"> </pvcs>
	<pvcsproject name="/myprj"/>
	<record name="ISO.log" loglevel="verbose"/>
	<regexp id="myregexp" pattern="alpha(.+)beta"/>
	<rename src="foo" dest="bar"/>
	<renameext srcDir="/source/project1" fromExtension=".java.keep" toExtension=".java"/>
	<replace file="src/index.html" token="@@@" value="wombat"/>
	<replaceregexp file="src/build.properties" match="OldProperty=(.*)" replace="NewProperty=\1"/>
	<resourcecount property="count.foo"> </resourcecount>
	<revoke class="java.util.PropertyPermission"/>
	<rexec server="localhost"/>
	<rmic classname="org.xyz.FooBar" base="build/classes"/>
	<scale proportions="width" width="40"/>
	<schemavalidate noNamespaceFile="document.xsd" file="xml/endpiece.xml"> </schemavalidate>
	<scp file="myfile.txt" todir="user:password@somehost:/home/foo"/>
	<script language="ruby"> </script>
	<scriptdef name="scripttest" language="javascript"> </scriptdef>
	<sequential> </sequential>
	<serverdeploy action="deploy" source="lib/ejb_myApp.ear"> </serverdeploy>
	<setproxy proxyhost="firewall"/>
	<signjar jar="dist/lib/ant.jar" alias="apache-group" storepass="secret"/>
	<sleep seconds="2"/>
	<sound> </sound>
	<splash imageurl="http://jakarta.apache.org/images/jakarta-logo.gif" useproxy="true" showduration="5000"/>
	<sql driver="org.database.jdbcDriver" url="jdbc:database-url" userid="sa" password="pass"> </sql>
	<sshexec host="somehost" password="yo" command="touch somefile"/>
	<style basedir="doc" destdir="build/doc" extension=".html" style="style/apache.xsl"/>
	<stylebook targetdirectory="build/docs" book="src/xdocs/book.xml" skindirectory="src/skins/myskin"/>
	<subant target=""> </subant>
	<symlink link="dir/foo" resource="dir/subdir/bar.foo"/>
	<sync todir="site"> </sync>
	<tar destfile="dist/manual.tar"/>
	<tarfileset> </tarfileset>
	<target name="targetName" description="does" depends="another_target"> </target>
	<taskdef name="myjavadoc" classname="com.mydomain.JavadocTask"/>
	<telnet userid="bob" password="badpass" server="localhost"> </telnet>
	<tempfile property="temp.file" suffix=".xml"/>
	<touch file="myfile"/>
	<translate toDir="dest.dir/ja" starttoken="#" endtoken="#" bundle="resource/BaseResource"> </translate>
	<tstamp/>
	<typedef name="urlset" classname="org.domain.URLSet"/>
	<untar src="tools.tar" dest="tools.home"/>
	<unzip src="tomcat_src/tools-src.zip" dest="tools.home"/>
	<uptodate property="isUpToDate" srcfile="/usr/local/bin/testit" targetfile="build/.flagfile"/>
	<waitfor maxwait="30" maxwaitunit="second"> </waitfor>
	<war destfile="myapp.war" webxml="src/metadata/myapp.xml"> </war>
	<whichresource resource="/log4j.properties" property="log4j.url"/>
	<wljspc src="/myserver/public_html" dest="/myserver/serverclasses" package="myapp.jsp"> </wljspc>
	<xmlcatalog> </xmlcatalog>
	<xmlproperty file="somefile.xml"/>
	<xmlvalidate file="toto.xml"/>
	<zip destfile="dist/manual.zip" basedir="htdocs/manual"/>
	<zipfileset> </zipfileset>
</completion_list>
